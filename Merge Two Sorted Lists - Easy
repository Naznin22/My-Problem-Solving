/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
//         if(l1 == NULL) return l2;
//         if(l2 == NULL) return l1;
        
//         ListNode* res= NULL;
        
//         if(l1->val<l2->val){
//             res=l1;
//             res->next = mergeTwoLists(l1->next,l2);
//         }else{
//             res=l2;
//             res->next = mergeTwoLists(l1,l2->next);
//         }
//         return res;
        ListNode* dummy = new ListNode(-999999);
        ListNode* cur = dummy;
        while(l1 && l2){
            if(l1->val < l2->val){
                cur->next = new ListNode(l1->val);
                l1 = l1->next;
            }else{
                cur->next = new ListNode(l2->val);
                l2 = l2->next;
            }
            cur = cur->next;
        }
        if(l1 == NULL){
            cur->next = l2;
        }
        if(l2==NULL){
            cur->next = l1;
        }
        
        ListNode* ans = dummy->next;
        return ans;
    }
};
