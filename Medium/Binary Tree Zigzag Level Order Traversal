/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> v;
        
        if(root == NULL){
            return  vector<vector<int>>();
        } 
        queue <TreeNode*> q;
        q.push(root);
        int i=0;
        while(!q.empty()){
            int nodeCount = q.size();
            vector<int> v_initial(nodeCount);
            
            for(int j=0;j<nodeCount;j++){
                TreeNode* ele = q.front();
                q.pop();
                
                if(i==0) v_initial[j] = ele->val;
                else if(i==1) v_initial[nodeCount-j-1] = ele->val;
                
                if(ele->left!=NULL){
                    q.push(ele->left);
                }
                if(ele->right!=NULL){
                    q.push(ele->right);
                }
            }
            
            v.push_back(v_initial);
            i=!i;
        }
        return v;
    }
};
